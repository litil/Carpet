imports:
    - { resource: config.yml }

framework:
    router:
        resource: "%kernel.root_dir%/config/routing_dev.yml"
        strict_requirements: true
    profiler: { only_exceptions: false }

web_profiler:
    toolbar: true
    intercept_redirects: false

monolog:
    handlers:
        main:
            type:   stream
            path:   "%kernel.logs_dir%/%kernel.environment%.log"
            level:  debug
        console:
            type:   console
            bubble: false
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type:   firephp
        #    level:  info
        #chromephp:
        #    type:   chromephp
        #    level:  info

assetic:
    use_controller: true

#swiftmailer:
#    delivery_address: me@example.com

bazinga_faker:
    locale: fr_FR
    orm: doctrine
    entities:
        Carpet\Bundle\PetBundle\Entity\Pet:
            number: 50
            custom_formatters:
                mood:   { method: randomDigitNotNull }
                name:   { method: word }
        Carpet\Bundle\PetBundle\Entity\Gadget:
            number: 87
        Carpet\Bundle\PetBundle\Entity\Possession:
            number: 645
        Carpet\Bundle\PetBundle\Entity\Event:
            number: 1258
        Carpet\Bundle\DataBundle\Entity\Route:
            number: 248
            custom_formatters:
                startName: { method: address }
                endName: { method: address }
                start: { method: datetime }
                end: { method: datetime }
                startLat:   { method: latitude }
                endLat:   { method: latitude }
                startLon:   { method: longitude }
                endLon:   { method: longitude }
        Carpet\Bundle\DataBundle\Entity\RouteSegment:
            number: 3259
            custom_formatters:
                start: { method: datetime }
                end: { method: datetime }
                startLat:   { method: latitude }
                endLat:   { method: latitude }
                startLon:   { method: longitude }
                endLon:   { method: longitude }
        